"use strict";var AnalyticsApplication=React.createClass({displayName:"AnalyticsApplication",getInitialState:function(){return{table_data:[],metrics:{user_count:"Loading...",avg_layer_height:"Loading...",avg_layer_count:"Loading..."}}},componentDidMount:function(){this.fetchTableData(),this.fetchMetricData()},fetchTableData:function(){this.ajaxGet("/data/get_bio_print_data",function(a){this.setState({table_data:a.message})}.bind(this))},fetchMetricData:function(){this.ajaxGet("/data/get_bio_print_metric_average_data",function(a){this.setState({metrics:a.message})}.bind(this))},ajaxGet:function(a,b){$.ajax({url:a,type:"GET",context:this,error:function(){this.throwError("Something went wrong, please try again later.")},success:function(a){a.error?this.throwError(a.message):b(a)}})},throwError:function(){console.error(message),alert(message)},render:function(){return React.createElement("div",null,React.createElement(Header,null),React.createElement("div",{id:"metrics-container",className:"row"},React.createElement("div",{className:"col-md-10 col-centered",id:"metrics-container-inner"},React.createElement(Metric,{label:"Users",value:this.state.metrics.user_count}),React.createElement(Metric,{label:"Avg. Layer Height (mm)",value:this.state.metrics.avg_layer_height}),React.createElement(Metric,{label:"Avg. Layer Count",value:this.state.metrics.avg_layer_count}))),React.createElement(Table,{data:this.state.table_data}))}}),Header=React.createClass({displayName:"Header",render:function(){return React.createElement("div",{id:"header"},React.createElement("div",{className:"logo-container"},React.createElement("img",{id:"logo",src:"https://www.biobots.io/wp-content/themes/biobots/images/logo.png"})))}}),Metric=React.createClass({displayName:"Metric",render:function(){return React.createElement("div",{className:"block metric"},React.createElement("div",{className:"value"},this.props.value),React.createElement("div",{className:"label"},this.props.label))}}),Table=React.createClass({displayName:"Table",render:function(){return React.createElement("div",{className:"row",id:"table-container"},React.createElement("div",{className:"col-md-10 col-centered block"},React.createElement(BootstrapTable,{data:this.props.data,striped:!0,hover:!0,height:"500",search:!0},React.createElement(TableHeaderColumn,{isKey:!0,dataField:"username"},"User Email"),React.createElement(TableHeaderColumn,{dataField:"serial"},"BioBot Serial Number"),React.createElement(TableHeaderColumn,{dataField:"input_file"},"Input File Name"),React.createElement(TableHeaderColumn,{dataField:"output_file"},"Output File Name"),React.createElement(TableHeaderColumn,{dataField:"cl_enabled"},"Crosslinking Enabled"),React.createElement(TableHeaderColumn,{dataField:"cl_duration"},"Crosslinking Duration (ms)"),React.createElement(TableHeaderColumn,{dataField:"cl_intensity"},"Crosslinking Light Intensity"),React.createElement(TableHeaderColumn,{dataField:"pressure_ex_1"},"Extruder 1 Pressure"),React.createElement(TableHeaderColumn,{dataField:"pressure_ex_2"},"Extruder 2 Pressure"),React.createElement(TableHeaderColumn,{dataField:"res_layer_height"},"Layer Height (mm)"),React.createElement(TableHeaderColumn,{dataField:"res_layer_num"},"Print Layers"),React.createElement(TableHeaderColumn,{dataField:"wellplate"},"Wellplate Type"),React.createElement(TableHeaderColumn,{dataField:"live_percent"},"Live Print %"),React.createElement(TableHeaderColumn,{dataField:"elasticity"},"Rigitity (kPa)"),React.createElement(TableHeaderColumn,{dataField:"dead_percent"},"Dead Print %"))))}});ReactDOM.render(React.createElement(AnalyticsApplication,null),document.getElementById("app-container"));